import{h as S,o as c,c as g,b as m,j as v,z as x,A as C}from"./index.d2b5948f.js";import{_}from"./App.8a7f3b43.js";/* 
get-svg-colors-browser v2.0.8
Copyright (c) 2022 Georg Fischer
@license MIT
https://github.com/snorpey/get-svg-colors-browser.git */const q=/<!--([\s\S]*?)-->/g,V="http://www.w3.org/2000/svg",w=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/i,k=["black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"];function h(e,t,l){return l.indexOf(e)===t}function f(e){for(var t=-1,l=e?e.length:0,r=0,o=[];++t<l;){var a=e[t];a&&(o[r++]=a)}return o}function d(e){return e.toLowerCase()}function p(e){return!e||e==="none"?!1:k.indexOf(e.toLowerCase())!==-1?!0:e.match(w)}function b(e){const t=new DOMParser;return e.indexOf("xmlns")===-1&&e.indexOf("<svg")!==-1&&e.replace("<svg",`<svg xmlns="${V}"`),t.parseFromString(e,"image/svg+xml")}function E(e){return/^\s*(?:<\?xml[^>]*>\s*)?(?:<!doctype svg[^>]*\s*(?:\[?(?:\s*<![^>]*>\s*)*\]?)*[^>]*>\s*)?<svg[^>]*>[^]*<\/svg>\s*$/i.test(e.replace(q,""))}function G(e){return e instanceof SVGElement}function u(e,t){return O(t.querySelectorAll(e))}function O(e){return Array.prototype.slice.call(e)}function A(e,t){if(G(e))return Promise.resolve(e);if(E(e))return Promise.resolve(b(e));if(typeof e=="string")return fetch(e).then(l=>l.text()).then(l=>b(l))}function y(e,t){return e.replace(/(\s|\n|\R|\r)/g,"").split(/(\{|\}|\;)/).map(r=>r.trim()).map(d).filter(r=>r&&r.length).filter(r=>r.indexOf(t)===0).map(r=>r.split(":").map(o=>o.trim()).filter(o=>o!==t)).reduce((r,o)=>r.concat(o),[]).filter(r=>k.indexOf(r)!==-1||w.test(r))}function L(e,t){return A(e).then(l=>{const r=u("[fill]",l).map(n=>n.getAttribute("fill")),o=u("[stroke]",l).map(n=>n.getAttribute("stroke")),a=u("[stop-color]",l).map(n=>n.getAttribute("stop-color"));return u("[style]",l).forEach(n=>{r.push(n.style.fill),o.push(n.style.stroke),a.push(n.style.stopColor)}),u("style",l).forEach(n=>{const s=n.textContent;y(s,"fill").forEach(i=>r.push(i)),y(s,"stroke").forEach(i=>o.push(i)),y(s,"stop-color").forEach(i=>a.push(i))}),t&&t.flat?f(r.concat(o).concat(a).filter(p).map(d).filter(h)):{fills:f(r.filter(p).map(d).filter(h)),strokes:f(o.filter(p).map(d).filter(h)),stops:f(a.filter(p).map(d).filter(h))}})}const I={props:["editor","selected"],data(){return{canvasContainer:S,colors:null,svg:null,currentColor:null,svgSelector:null,imageSrc:null}},methods:{changeSVG:function(){let e=document.createElement("input"),t=this;e.type="file",e.onchange=()=>{e.files[0].arrayBuffer().then(function(l){let r=new TextDecoder().decode(l);try{t.changeE(r)}catch{}})},e.click()},changeE(e){let t="data:image/svg+xml;base64,"+window.btoa(e);fetch(t).then(l=>l.blob()).then(l=>{let r=window.URL.createObjectURL(l);this.canvasContainer.editor.updateImage(this.selected,r,{imageSrc:t}),setTimeout(()=>{this.canvasContainer.editor.transform.nodes([]),this.canvasContainer.editor.transform.nodes([this.selected]),this.getColors()},100),this.imageSrc=t})},changeColor(e,t){let l=e.target.value.toUpperCase();t=t.toUpperCase();let o=this.selected.attrs.imageSrc.replace("data:image/svg+xml;base64,",""),n=window.atob(o).replace(t,l),s="data:image/svg+xml;base64,"+window.btoa(n);this.imageSrc=s,this.changeE(n)},getColors(){let e=this.svgSelector.attrs.imageSrc;this.imageSrc=e;let t=window.atob(e.replace("data:image/svg+xml;base64,",""));this.svg=t,L(t).then(l=>{this.colors=l.fills})}},watch:{selected:function(e,t){this.svgSelector=e,this.getColors()}},mounted(){this.svgSelector=this.selected,this.getColors()}},R={key:0,class:"w-15 flex justify-center"},U=["src"],j={key:0,class:"grid grid-cols-10 my-2"},B=["onInput","value"];function F(e,t,l,r,o,a){return c(),g("div",null,[m("div",null,[o.imageSrc?(c(),g("div",R,[m("img",{src:o.imageSrc},null,8,U)])):v("",!0)]),o.colors?(c(),g("div",j,[(c(!0),g(x,null,C(o.colors,(n,s)=>(c(),g("div",{key:s},[m("input",{onInput:i=>a.changeColor(i,n),class:"w-4 h-5 border-none color",type:"color",value:n},null,40,B)]))),128))])):v("",!0),m("button",{class:"bg-blue-500 text-white px-3 py-2 rounded my-2 shadow",onClick:t[0]||(t[0]=(...n)=>a.changeSVG&&a.changeSVG(...n))},"Change SVG")])}const z=_(I,[["render",F]]);export{z as default};
