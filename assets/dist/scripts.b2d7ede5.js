const p={id:12333,name:"Countdown",fields:[{id:"day_field",value:"",label:"Day Output",type:"select",kind:"Text"},{id:"hour_field",value:"",label:"Hour Output",type:"select",kind:"Text"},{id:"minute_field",value:"",label:"Minute Output",type:"select",kind:"Text"},{id:"seconds_field",value:"",label:"Seconds Output",type:"select",kind:"Text"},{id:"date_field",value:"",label:"Target Date",type:"date"}],run(){const i=s=>{function o(){const n=new Date(s).getTime(),u=new Date().getTime(),c=n-u;if(c<=0)return clearInterval(r),{days:0,hours:0,minutes:0,seconds:0};const l=Math.floor(c/(1e3*60*60*24)),b=Math.floor(c%(1e3*60*60*24)/(1e3*60*60)),v=Math.floor(c%(1e3*60*60)/(1e3*60)),h=Math.floor(c%(1e3*60)/1e3);return{days:l,hours:b,minutes:v,seconds:h}}const e=labelbakerCanvas.editor.find("."+this.fields[0].value),t=labelbakerCanvas.editor.find("."+this.fields[1].value),d=labelbakerCanvas.editor.find("."+this.fields[2].value),f=labelbakerCanvas.editor.find("."+this.fields[3].value),r=setInterval(()=>{const n=o();e.length>0&&e[0].text(n.days),t.length>0&&t[0].text(n.hours),d.length>0&&d[0].text(n.minutes),f.length>0&&f[0].text(n.seconds)},1e3);return r},a=this.fields[4].value;if(a){const s=i(a);window.lableBakerIntervals.push(s)}}},m={id:234,name:"Increment & Decrement",fields:[{id:"increment_field",value:"",label:"Increment Field",type:"select",kind:"Text"},{id:"decrement_field",value:"",label:"Decrement Field",type:"select",kind:"Text"},{id:"increment_btn",value:"",label:"Increment Button",type:"select"},{id:"decrement_btn",value:"",label:"Decrement Button",type:"select"},{id:"max_field",value:100,label:"Max Increment",type:"number"},{id:"min_field",value:0,label:"Min Decrement",type:"number"}],run(){const i=labelbakerCanvas.editor.find("."+this.fields[2].value),a=labelbakerCanvas.editor.find("."+this.fields[3].value),s=labelbakerCanvas.editor.find("."+this.fields[0].value),o=labelbakerCanvas.editor.find("."+this.fields[1].value);let e=0;i.length>0&&(i[0].on("mouseenter",()=>{labelbakerCanvas.editor.container().style.cursor="pointer"}),i[0].on("click",()=>{if(s.length>0){let t=s[0];if(t.attrs.type==="text"&&(e=parseInt(t.text()),e==NaN&&(t.text(0),e=0),parseInt(this.fields[4].value)>e&&e++,t.text(e)),t.attrs.type==="circle"&&(e=parseInt(t.radius()),parseInt(this.fields[4].value)>e&&e++,t.radius(e)),t.attrs.type==="line"){e=parseInt(t.x());let d=t.width();parseInt(this.fields[4].value)>e&&e++,t.x(e),t.width(d++)}}})),a.length>0&&(a[0].on("mouseenter",()=>{labelbakerCanvas.editor.container().style.cursor="pointer"}),a[0].on("click",()=>{if(o.length>0){let t=o[0];e=parseInt(t.text()),e==NaN&&(t.text(0),e=0),parseInt(this.fields[5].value)<e&&e--,t.text(e)}}))}},y={id:"1691674982111",name:"Add to cart",description:"",fields:[{id:"product_id",value:"111",label:"Product ID",type:"number"},{id:"cart_count",value:"Cart_count",label:"Cart count field",type:"select",kind:"Text"},{id:"cart_button",value:"Cart_button",label:"Cart Button",type:"select"}],run(){const i=(s,o)=>{fetch(window.location.origin+`/?add-to-cart=${s}&quantity=${o}`).then(e=>{console.log(e)})},a=labelbakerCanvas.editor.find("."+this.fields[2].value);a.length>0&&(a[0].on("mouseenter",()=>{labelbakerCanvas.editor.container().style.cursor="pointer"}),a[0].on("click",()=>{const s=labelbakerCanvas.editor.find("."+this.fields[1].value);let o=1;s.length>0&&(o=s[0].text()),i(this.fields[0].value,o),alert("Add to cart")}))}},k={id:"1691687117762",name:"Select",description:"",fields:[{id:"select_group",value:"",label:"Select Group",type:"select",kind:"Group"},{id:"act_as",value:"radio",label:"Act as",data:[{key:"radio",value:"Radio"},{key:"checkbox",value:"Checkbox"}],type:"select"},{id:"selection_width",value:"1",label:"Selection Thickness",type:"number"},{id:"selection_color",value:"#3F83F8",label:"Selection Color",type:"color"},{id:"selection_type",value:"border",label:"Act as",data:[{key:"border",value:"Border"},{key:"fill",value:"Fill"}],type:"select"},{id:"deselected_fill_color",value:"#3F83F8",label:"Deselect Color",type:"color"}],run(){let i=null,a=this.fields[2].value,s=this.fields[0].value,o=this.fields[1].value,e=this.fields[3].value,t=labelbakerCanvas.layer.find(d=>d.name()===s&&d instanceof Konva.Group)[0];if(t){const d=(r,n)=>{const u=r.indexOf(n);return u!==-1?r.splice(u,1):r.push(n),r};let f=[];t.on("click",r=>{i=r.target;let n=i.getAttr("value");o==="radio"?n||(n=i.attrs.name):(n||(n=i.attrs.name),n=d(f,i.attrs.name)),t.setAttr("value",n);const u=this.fields[4].value,c=this.fields[5].value;o==="radio"?t.children.forEach(l=>{u==="border"?l!=i?typeof l.strokeEnabled=="function"&&l.strokeEnabled(!1):(l.strokeWidth(a),l.stroke(e),typeof l.strokeEnabled=="function"&&l.strokeEnabled(!0)):l!=i?l.fill(c):l.fill(e)}):t.children.forEach(l=>{u==="border"?l==i&&(f.includes(l.name())?(l.strokeWidth(a),l.stroke(this.fields[3].value),typeof l.strokeEnabled=="function"&&l.strokeEnabled(!0)):typeof l.strokeEnabled=="function"&&l.strokeEnabled(!1)):l==i&&(f.includes(l.name())?l.fill(c):l.fill(e))})})}}};export{y as a,p as c,m as i,k as s};
